@page "/manage-products"
@using AutoMapper
@using Kanakku.Application.Models.Product
@using Kanakku.Application.Requests.Product
@using Kanakku.Web.Components
@using Kanakku.UI.Contracts.Event
@using MediatR
@inject IAppMediator AppMediator
@inject NavigationManager NavigationManager
@inject IMediator Mediator

<MudTable Items="@Products" FixedHeader=true Hover="true" Breakpoint="Breakpoint.Sm"
          LoadingProgressColor="Color.Info" Striped=true Bordered=true Elevation="1"
          T="ProductListDto" Dense="true" RowsPerPage="10"
          Filter="new Func<ProductListDto,bool>(FilterProductsFunc)">
    <ToolBarContent>
        <div class="d-flex flex-row w-100 justify-space-between">
            <MudText Typo="Typo.h6">Products</MudText>
            <MudStack Row="true" Spacing="1">
                <MudItem>
                    <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                </MudItem>
                <MudItem>
                    <MudButton Class="ms-5" Color="Color.Primary" OnClick="@(()=> SelectProduct(null))">Add Product</MudButton>
                </MudItem>
                <MudItem>
                    <ExportButton OnClickAction="(()=> Mediator.Send(new GetAllProductsExportCommand()))" />
                </MudItem>
            </MudStack>
        </div>
    </ToolBarContent>
    <HeaderContent>
        <MudTh Style="width: 10px;">S/N</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Model Number</MudTh>
        <MudTh>Quantity</MudTh>
        <MudTh>Action</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="S/N">@context.RowNumber</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Model Number">@context.ShortCode</MudTd>
        <MudTd DataLabel="Quantity">@context.TotalQuantity</MudTd>
        <MudTd DataLabel="Action">
            <MudButton Variant="Variant.Text" Color="Color.Info" OnClick="(()=> SelectProduct(context))" Size="Size.Small"> view details</MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private List<ProductListDto> Products { get; set; } = new List<ProductListDto>();
    public string searchString;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await AppMediator.Send(new GetAllProductsQuery())
                .OnSuccess(async data =>
                {
                    Products = data;
                    await InvokeAsync(StateHasChanged);
                });
        }
    }

    private void SelectProduct(ProductListDto selectedProduct)
    {
        int productId = 0;
        if (selectedProduct != null)
        {
            productId = selectedProduct.Id;
        }
        NavigationManager.NavigateTo($"manage-products/{productId}");
    }

    private bool FilterProductsFunc(ProductListDto element) => FilterProductsFuncImp(element, searchString?.Trim());

    private bool FilterProductsFuncImp(ProductListDto element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.ShortCode.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        
        return false;
    }
}
